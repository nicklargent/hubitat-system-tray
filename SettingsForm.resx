<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLS0tVTExMuUxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxM
        TPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTLlLS0tVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS0tLVUxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxM
        TPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxM
        TPJLS0tVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEy5TExM8kxMTPJMTEzyTExM8kxM
        TPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxMTPJMTEzyTExM8kxM
        TPJMTEzyTExM8kxMTLkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTPJMTEzyTExM8v//
        ////////////////////////////////////////////////////////////////////////////////
        /////////////0xMTPJMTEzyTExM8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExM8kxM
        TPJMTEzy////////////////////////////////////////////////////////////////////////
        ////////////////////////TExM8kxMTPJMTEzyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABMTEzyTExM8kxMTPL/////////////////////////////////////////////////////////////
        //////////////////////////////////9MTEzyTExM8kxMTPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAExMTPJMTEzyTExM8v//////////////////////////////////////////////////
        /////////////////////////////////////////////0xMTPJMTEzyTExM8gAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATExM8kxMTPJMTEzy////////////////////////////////////////
        ////////////////////////////////////////////////////////TExM8kxMTPJMTEzyAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEzyTExM8kxMTPL/////////////////////////////
        //////////////////////////////////////////////////////////////////9MTEzyTExM8kxM
        TPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTPJMTEzyTExM8v//////////////////
        /////////////////////////////////////////////////////////////////////////////0xM
        TPJMTEzyTExM8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExM8kxMTPJMTEzy////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////TExM8kxMTPJMTEzyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEzyTExM8kxM
        TPL/////////////////////////////////////////////////////////////////////////////
        //////////////////9MTEzyTExM8kxMTPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExM
        TPJMTEzyTExM8v//////////////////////////////////////////////////////////////////
        /////////////////////////////0xMTPJMTEzyTExM8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExM
        TFBLS0uzTExM8kxMTPJMTEzy////////////////////////////////////////////////////////
        ////////////////////////////////////////TExM8kxMTPJMTEzyS0tLs0xMTFAAAAAAAAAAAAAA
        AABMTExrTExM8kxMTPJMTEzyTExM8kxMTPL/////////////////////////////////////////////
        //////////////////////////////////////////////////9MTEzyTExM8kxMTPJMTEzyTExM8kpK
        SnEAAAAAOTk5CUxMTPJMTEzyTExM8kxMTPJMTEzyTExM8v//////////////////////////////////
        /////////////////////////////////////////////////////////////0xMTPJMTEzyTExM8kxM
        TPJMTEzyTExM8gAAAABLS0tBTExM8kxMTPJ+fn72+/v7////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///7+/v/gYGB9kxMTPJMTEzyAAAAADk5OQlMTEzyTExM8kxMTPKBgYH2+/v7////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /////////f39/4eHh/ZMTEzyTExM8kxMTPIAAAAAAAAAAExMTGtMTEzyTExM8kxMTPKJiYn2/f39////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////39/f+NjY33TExM8kxMTPJMTEzySkpKcQAAAAAAAAAAAAAAAEpKSnFMTEzyTExM8kxM
        TPKOjo73////////////////////////////////////////////////////////////////////////
        ////////////////////////kJCQ90xMTPJMTEzyTExM8ktLS3cAAAAAAAAAAAAAAAAAAAAAAAAAAExM
        THlMTEzyTExM8kxMTPKSkpL3////////////////////////////////////////////////////////
        /////////////////////////////5mZmfhMTEzyTExM8kxMTPJMTEx/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAExMTIJMTEzyTExM8kxMTPKcnJz4////////////////////////////////////////
        //////////////////////////////////+enp74TExM8kxMTPJMTEzyTU1NhQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEtLS4hMTEzyTExM8kxMTPKjo6P4////////////////////////
        ////////////////////////////////////////7u7u/ltbW/NMTEzyTExM8kxMTJAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTJNMTEzyTExM8kxMTPKoqKj5////////
        ////////////////////////////////////////////////////////4uLi/V1dXfNMTEyWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTJ5MTEzyTExM8kxM
        TPKxsbH5////////////////////////////////////////////////////////////////3d3d5wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExM
        TKRMTEzyTExM8kxMTPK5ubn6////////////////////////////////vb29+sjIyPv///////////Dw
        8Pb4+PgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEtLS7BMTEzyTExM8kxMTPK/v7/6/////////////////////7+/v/pMTEzyTk5O8r+/
        v/rv7+/39/f3IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTLtMTEzyTExM8k5OTvLDw8P7///////////FxcX7Tk5O8kxM
        TPJMTEzyTExMvvPz8xUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTMNMTEzyTExM8lBQUPLKysr7ysrK+1BQ
        UPJMTEzyTExM8kxMTMMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASkpKLUxMTMlMTEzyTExM8lBQ
        UPJQUFDyTExM8kxMTPJMTEzMSkpKLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExML0xM
        TNJMTEzyTExM8kxMTPJMTEzyTExM0kxMTC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATExML0xMTL9MTEzyTExM8kxMTL9MTEwvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/gAAH/wAAA/4AAAH+AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAH+AAAB/gA
        AAf4AAAH+AAAB/AAAAPgAAABwAAAAMAAAADAAAAA4AAAAfAAAAP4AAAH+AAAB/wAAA/+AAAf/wAAP/+A
        AH//wAD//+AB///wA///+Af///wP///+H/8=
</value>
  </data>
</root>